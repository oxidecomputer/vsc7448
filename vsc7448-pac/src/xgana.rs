// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Based on mesa-v2021.09 (https://github.com/microchip-ung/mesa/) which has
// the following copyright and license:
//
// Copyright (c) 2004-2021 Microchip Technology Inc. and its subsidiaries.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// This is an autogenerated file; do not edit by hand!

use crate::types::RegisterAddress;

// Register groups are stored in the tree as submodules

pub mod sd10g65_des;
pub mod sd10g65_ib;
pub mod sd10g65_ob;
pub mod sd10g65_rx_rcpll;
pub mod sd10g65_rx_synth;
pub mod sd10g65_tx_rcpll;
pub mod sd10g65_tx_synth;

/// SD10G65 DES Configuration and Status Register set
pub struct SD10G65_DES(pub(super) u32);
impl SD10G65_DES {
    pub fn SD10G65_DES_CFG0(&self) -> RegisterAddress<sd10g65_des::SD10G65_DES_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// SD10G65 IB Configuration and Status Register set
pub struct SD10G65_IB(pub(super) u32);
impl SD10G65_IB {
    pub fn SD10G65_IB_CFG0(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn SD10G65_IB_CFG1(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG1> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn SD10G65_IB_CFG10(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG10> {
        RegisterAddress::new(self.0 + 0x28)
    }
    pub fn SD10G65_IB_CFG11(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG11> {
        RegisterAddress::new(self.0 + 0x2c)
    }
    pub fn SD10G65_IB_CFG2(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG2> {
        RegisterAddress::new(self.0 + 0x8)
    }
    pub fn SD10G65_IB_CFG3(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG3> {
        RegisterAddress::new(self.0 + 0xc)
    }
    pub fn SD10G65_IB_CFG4(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG4> {
        RegisterAddress::new(self.0 + 0x10)
    }
    pub fn SD10G65_IB_CFG5(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG5> {
        RegisterAddress::new(self.0 + 0x14)
    }
    pub fn SD10G65_IB_CFG6(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG6> {
        RegisterAddress::new(self.0 + 0x18)
    }
    pub fn SD10G65_IB_CFG7(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG7> {
        RegisterAddress::new(self.0 + 0x1c)
    }
    pub fn SD10G65_IB_CFG8(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG8> {
        RegisterAddress::new(self.0 + 0x20)
    }
    pub fn SD10G65_IB_CFG9(&self) -> RegisterAddress<sd10g65_ib::SD10G65_IB_CFG9> {
        RegisterAddress::new(self.0 + 0x24)
    }
    pub fn SD10G65_RX_SVN_ID(&self) -> RegisterAddress<sd10g65_ib::SD10G65_RX_SVN_ID> {
        RegisterAddress::new(self.0 + 0x34)
    }
    pub fn SD10G65_SBUS_RX_CFG(&self) -> RegisterAddress<sd10g65_ib::SD10G65_SBUS_RX_CFG> {
        RegisterAddress::new(self.0 + 0x30)
    }
    pub fn SD10G65_TX_REV_ID(&self) -> RegisterAddress<sd10g65_ib::SD10G65_TX_REV_ID> {
        RegisterAddress::new(self.0 + 0x18)
    }
}

/// SD10G65 OB Configuration and Status Register set
pub struct SD10G65_OB(pub(super) u32);
impl SD10G65_OB {
    pub fn SD10G65_MOEBDIV_CFG0(&self) -> RegisterAddress<sd10g65_ob::SD10G65_MOEBDIV_CFG0> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn SD10G65_OB_CFG0(&self) -> RegisterAddress<sd10g65_ob::SD10G65_OB_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn SD10G65_OB_CFG1(&self) -> RegisterAddress<sd10g65_ob::SD10G65_OB_CFG1> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn SD10G65_OB_CFG2(&self) -> RegisterAddress<sd10g65_ob::SD10G65_OB_CFG2> {
        RegisterAddress::new(self.0 + 0x8)
    }
    pub fn SD10G65_OB_CFG3(&self) -> RegisterAddress<sd10g65_ob::SD10G65_OB_CFG3> {
        RegisterAddress::new(self.0 + 0xc)
    }
    pub fn SD10G65_SBUS_TX_CFG(&self) -> RegisterAddress<sd10g65_ob::SD10G65_SBUS_TX_CFG> {
        RegisterAddress::new(self.0 + 0x10)
    }
    pub fn SD10G65_TX_SVN_ID(&self) -> RegisterAddress<sd10g65_ob::SD10G65_TX_SVN_ID> {
        RegisterAddress::new(self.0 + 0x14)
    }
}

/// SD10G65 RX RCPLL Configuration and Status Register set
pub struct SD10G65_RX_RCPLL(pub(super) u32);
impl SD10G65_RX_RCPLL {
    pub fn SD10G65_RX_RCPLL_CFG0(&self) -> RegisterAddress<sd10g65_rx_rcpll::SD10G65_RX_RCPLL_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn SD10G65_RX_RCPLL_CFG1(&self) -> RegisterAddress<sd10g65_rx_rcpll::SD10G65_RX_RCPLL_CFG1> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn SD10G65_RX_RCPLL_CFG2(&self) -> RegisterAddress<sd10g65_rx_rcpll::SD10G65_RX_RCPLL_CFG2> {
        RegisterAddress::new(self.0 + 0x8)
    }
    pub fn SD10G65_RX_RCPLL_STAT0(&self) -> RegisterAddress<sd10g65_rx_rcpll::SD10G65_RX_RCPLL_STAT0> {
        RegisterAddress::new(self.0 + 0xc)
    }
    pub fn SD10G65_RX_REV_ID(&self) -> RegisterAddress<sd10g65_rx_rcpll::SD10G65_RX_REV_ID> {
        RegisterAddress::new(self.0 + 0x38)
    }
}

/// SD10G65 RX SYNTH Configuration and Status Register set
pub struct SD10G65_RX_SYNTH(pub(super) u32);
impl SD10G65_RX_SYNTH {
    pub fn SD10G65_RX_RCPLL_STAT1(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_RCPLL_STAT1> {
        RegisterAddress::new(self.0 + 0x10)
    }
    pub fn SD10G65_RX_SYNTH_CDRLF(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_CDRLF> {
        RegisterAddress::new(self.0 + 0x14)
    }
    pub fn SD10G65_RX_SYNTH_CFG0(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn SD10G65_RX_SYNTH_CFG1(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_CFG1> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn SD10G65_RX_SYNTH_CFG2(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_CFG2> {
        RegisterAddress::new(self.0 + 0x8)
    }
    pub fn SD10G65_RX_SYNTH_CFG3(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_CFG3> {
        RegisterAddress::new(self.0 + 0xc)
    }
    pub fn SD10G65_RX_SYNTH_CFG4(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_CFG4> {
        RegisterAddress::new(self.0 + 0x10)
    }
    pub fn SD10G65_RX_SYNTH_QUALIFIER0(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_QUALIFIER0> {
        RegisterAddress::new(self.0 + 0x18)
    }
    pub fn SD10G65_RX_SYNTH_QUALIFIER1(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_QUALIFIER1> {
        RegisterAddress::new(self.0 + 0x1c)
    }
    pub fn SD10G65_RX_SYNTH_SYNC_CTRL(&self) -> RegisterAddress<sd10g65_rx_synth::SD10G65_RX_SYNTH_SYNC_CTRL> {
        RegisterAddress::new(self.0 + 0x20)
    }
}

/// SD10G65 TX RCPLL Configuration and Status Register set
pub struct SD10G65_TX_RCPLL(pub(super) u32);
impl SD10G65_TX_RCPLL {
    pub fn SD10G65_SSC_CFG1(&self) -> RegisterAddress<sd10g65_tx_rcpll::SD10G65_SSC_CFG1> {
        RegisterAddress::new(self.0 + 0x14)
    }
    pub fn SD10G65_TX_RCPLL_CFG0(&self) -> RegisterAddress<sd10g65_tx_rcpll::SD10G65_TX_RCPLL_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn SD10G65_TX_RCPLL_CFG1(&self) -> RegisterAddress<sd10g65_tx_rcpll::SD10G65_TX_RCPLL_CFG1> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn SD10G65_TX_RCPLL_CFG2(&self) -> RegisterAddress<sd10g65_tx_rcpll::SD10G65_TX_RCPLL_CFG2> {
        RegisterAddress::new(self.0 + 0x8)
    }
    pub fn SD10G65_TX_RCPLL_STAT0(&self) -> RegisterAddress<sd10g65_tx_rcpll::SD10G65_TX_RCPLL_STAT0> {
        RegisterAddress::new(self.0 + 0xc)
    }
    pub fn SD10G65_TX_RCPLL_STAT1(&self) -> RegisterAddress<sd10g65_tx_rcpll::SD10G65_TX_RCPLL_STAT1> {
        RegisterAddress::new(self.0 + 0x10)
    }
}

/// SD10G65 TX SYNTH Configuration and Status Register set
pub struct SD10G65_TX_SYNTH(pub(super) u32);
impl SD10G65_TX_SYNTH {
    pub fn F2DF_CFG_STAT(&self) -> RegisterAddress<sd10g65_tx_synth::F2DF_CFG_STAT> {
        RegisterAddress::new(self.0 + 0x24)
    }
    pub fn SD10G65_SSC_CFG0(&self) -> RegisterAddress<sd10g65_tx_synth::SD10G65_SSC_CFG0> {
        RegisterAddress::new(self.0 + 0x10)
    }
    pub fn SD10G65_TX_SYNTH_CFG0(&self) -> RegisterAddress<sd10g65_tx_synth::SD10G65_TX_SYNTH_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn SD10G65_TX_SYNTH_CFG1(&self) -> RegisterAddress<sd10g65_tx_synth::SD10G65_TX_SYNTH_CFG1> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn SD10G65_TX_SYNTH_CFG3(&self) -> RegisterAddress<sd10g65_tx_synth::SD10G65_TX_SYNTH_CFG3> {
        RegisterAddress::new(self.0 + 0x8)
    }
    pub fn SD10G65_TX_SYNTH_CFG4(&self) -> RegisterAddress<sd10g65_tx_synth::SD10G65_TX_SYNTH_CFG4> {
        RegisterAddress::new(self.0 + 0xc)
    }
}
