// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Based on mesa-v2021.09 (https://github.com/microchip-ung/mesa/) which has
// the following copyright and license:
//
// Copyright (c) 2004-2021 Microchip Technology Inc. and its subsidiaries.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// This is an autogenerated file; do not edit by hand!

use crate::types::RegisterAddress;

// Register groups are stored in the tree as submodules

pub mod apc_tmr;
pub mod kr_1x0096;
pub mod kr_1x0097;
pub mod kr_1x0098;
pub mod kr_1x0099;
pub mod kr_1x009a;
pub mod kr_1x009b;
pub mod mw_tmr;
pub mod obcfg_addr;
pub mod tr_ber_ofs;
pub mod tr_ber_thr;
pub mod tr_brkmask;
pub mod tr_cfg0;
pub mod tr_cfg1;
pub mod tr_cfg2;
pub mod tr_cfg3;
pub mod tr_cfg4;
pub mod tr_cfg5;
pub mod tr_cfg6;
pub mod tr_cfg7;
pub mod tr_cfg8;
pub mod tr_cfg9;
pub mod tr_coef_ovrd;
pub mod tr_errcnt;
pub mod tr_frames_sent;
pub mod tr_gain;
pub mod tr_lut;
pub mod tr_lutsel;
pub mod tr_mthd;
pub mod tr_ovrd;
pub mod tr_rec;
pub mod tr_sm_hist;
pub mod tr_stat_ovrd;
pub mod tr_step;
pub mod tr_sts1;
pub mod tr_sts2;
pub mod tr_tapval;
pub mod wt_tmr;

/// Not documented
pub struct APC_TMR(pub(super) u32);
impl APC_TMR {
    pub fn OBCFG_ADDR(&self) -> RegisterAddress<apc_tmr::OBCFG_ADDR> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct KR_1X0096(pub(super) u32);
impl KR_1X0096 {}

/// Not documented
pub struct KR_1X0097(pub(super) u32);
impl KR_1X0097 {
    pub fn KR_1X0096(&self) -> RegisterAddress<kr_1x0097::KR_1X0096> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct KR_1X0098(pub(super) u32);
impl KR_1X0098 {
    pub fn KR_1X0097(&self) -> RegisterAddress<kr_1x0098::KR_1X0097> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct KR_1X0099(pub(super) u32);
impl KR_1X0099 {
    pub fn KR_1X0098(&self) -> RegisterAddress<kr_1x0099::KR_1X0098> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct KR_1X009A(pub(super) u32);
impl KR_1X009A {
    pub fn KR_1X0099(&self) -> RegisterAddress<kr_1x009a::KR_1X0099> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct KR_1X009B(pub(super) u32);
impl KR_1X009B {
    pub fn KR_1X009A(&self) -> RegisterAddress<kr_1x009b::KR_1X009A> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct MW_TMR(pub(super) u32);
impl MW_TMR {
    pub fn MW_TMR_LSW(&self) -> RegisterAddress<mw_tmr::MW_TMR_LSW> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn WT_TMR(&self) -> RegisterAddress<mw_tmr::WT_TMR> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct OBCFG_ADDR(pub(super) u32);
impl OBCFG_ADDR {
    pub fn BRKMASK_MSW(&self) -> RegisterAddress<obcfg_addr::BRKMASK_MSW> {
        RegisterAddress::new(self.0 + 0x4)
    }
}

/// Not documented
pub struct TR_BER_OFS(pub(super) u32);
impl TR_BER_OFS {
    pub fn TR_BER_THR(&self) -> RegisterAddress<tr_ber_ofs::TR_BER_THR> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_BER_THR(pub(super) u32);
impl TR_BER_THR {
    pub fn TR_MTHD(&self) -> RegisterAddress<tr_ber_thr::TR_MTHD> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_BRKMASK(pub(super) u32);
impl TR_BRKMASK {
    pub fn BRKMASK_LSW(&self) -> RegisterAddress<tr_brkmask::BRKMASK_LSW> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn TR_LUTSEL(&self) -> RegisterAddress<tr_brkmask::TR_LUTSEL> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG0(pub(super) u32);
impl TR_CFG0 {
    pub fn KR_1X009B(&self) -> RegisterAddress<tr_cfg0::KR_1X009B> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG1(pub(super) u32);
impl TR_CFG1 {
    pub fn TR_CFG0(&self) -> RegisterAddress<tr_cfg1::TR_CFG0> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG2(pub(super) u32);
impl TR_CFG2 {
    pub fn TR_CFG1(&self) -> RegisterAddress<tr_cfg2::TR_CFG1> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG3(pub(super) u32);
impl TR_CFG3 {
    pub fn TR_CFG2(&self) -> RegisterAddress<tr_cfg3::TR_CFG2> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG4(pub(super) u32);
impl TR_CFG4 {
    pub fn TR_CFG3(&self) -> RegisterAddress<tr_cfg4::TR_CFG3> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG5(pub(super) u32);
impl TR_CFG5 {
    pub fn TR_CFG4(&self) -> RegisterAddress<tr_cfg5::TR_CFG4> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG6(pub(super) u32);
impl TR_CFG6 {
    pub fn TR_CFG5(&self) -> RegisterAddress<tr_cfg6::TR_CFG5> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG7(pub(super) u32);
impl TR_CFG7 {
    pub fn TR_CFG6(&self) -> RegisterAddress<tr_cfg7::TR_CFG6> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG8(pub(super) u32);
impl TR_CFG8 {
    pub fn TR_CFG7(&self) -> RegisterAddress<tr_cfg8::TR_CFG7> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_CFG9(pub(super) u32);
impl TR_CFG9 {
    pub fn TR_CFG8(&self) -> RegisterAddress<tr_cfg9::TR_CFG8> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_COEF_OVRD(pub(super) u32);
impl TR_COEF_OVRD {
    pub fn TR_GAIN(&self) -> RegisterAddress<tr_coef_ovrd::TR_GAIN> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_ERRCNT(pub(super) u32);
impl TR_ERRCNT {
    pub fn LUT_MSW(&self) -> RegisterAddress<tr_errcnt::LUT_MSW> {
        RegisterAddress::new(self.0 + 0x4)
    }
}

/// Not documented
pub struct TR_FRAMES_SENT(pub(super) u32);
impl TR_FRAMES_SENT {
    pub fn FRSENT_LSW(&self) -> RegisterAddress<tr_frames_sent::FRSENT_LSW> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn TR_CPVAL(&self) -> RegisterAddress<tr_frames_sent::TR_CPVAL> {
        RegisterAddress::new(self.0 + 0x8)
    }
}

/// Not documented
pub struct TR_GAIN(pub(super) u32);
impl TR_GAIN {
    pub fn TR_CFG9(&self) -> RegisterAddress<tr_gain::TR_CFG9> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_LUT(pub(super) u32);
impl TR_LUT {
    pub fn FRSENT_MSW(&self) -> RegisterAddress<tr_lut::FRSENT_MSW> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn LUT_LSW(&self) -> RegisterAddress<tr_lut::LUT_LSW> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_LUTSEL(pub(super) u32);
impl TR_LUTSEL {
    pub fn TR_BER_OFS(&self) -> RegisterAddress<tr_lutsel::TR_BER_OFS> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_MTHD(pub(super) u32);
impl TR_MTHD {
    pub fn TR_STEP(&self) -> RegisterAddress<tr_mthd::TR_STEP> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_OVRD(pub(super) u32);
impl TR_OVRD {
    pub fn TR_STAT_OVRD(&self) -> RegisterAddress<tr_ovrd::TR_STAT_OVRD> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_REC(pub(super) u32);
impl TR_REC {
    pub fn HIST_MSW(&self) -> RegisterAddress<tr_rec::HIST_MSW> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn TR_C0_DME_REC(&self) -> RegisterAddress<tr_rec::TR_C0_DME_REC> {
        RegisterAddress::new(self.0 + 0xc)
    }
    pub fn TR_C0_LIM_REC(&self) -> RegisterAddress<tr_rec::TR_C0_LIM_REC> {
        RegisterAddress::new(self.0 + 0x8)
    }
    pub fn TR_CM_DME_REC(&self) -> RegisterAddress<tr_rec::TR_CM_DME_REC> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn TR_CM_LIM_REC(&self) -> RegisterAddress<tr_rec::TR_CM_LIM_REC> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn TR_CP_DME_REC(&self) -> RegisterAddress<tr_rec::TR_CP_DME_REC> {
        RegisterAddress::new(self.0 + 0x14)
    }
    pub fn TR_CP_LIM_REC(&self) -> RegisterAddress<tr_rec::TR_CP_LIM_REC> {
        RegisterAddress::new(self.0 + 0x10)
    }
}

/// Not documented
pub struct TR_SM_HIST(pub(super) u32);
impl TR_SM_HIST {
    pub fn HIST_LSW(&self) -> RegisterAddress<tr_sm_hist::HIST_LSW> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn TR_ERRCNT(&self) -> RegisterAddress<tr_sm_hist::TR_ERRCNT> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_STAT_OVRD(pub(super) u32);
impl TR_STAT_OVRD {
    pub fn TR_COEF_OVRD(&self) -> RegisterAddress<tr_stat_ovrd::TR_COEF_OVRD> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_STEP(pub(super) u32);
impl TR_STEP {
    pub fn TR_OVRD(&self) -> RegisterAddress<tr_step::TR_OVRD> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_STS1(pub(super) u32);
impl TR_STS1 {
    pub fn MW_TMR_MSW(&self) -> RegisterAddress<tr_sts1::MW_TMR_MSW> {
        RegisterAddress::new(self.0 + 0x4)
    }
}

/// Not documented
pub struct TR_STS2(pub(super) u32);
impl TR_STS2 {
    pub fn TR_STS1(&self) -> RegisterAddress<tr_sts2::TR_STS1> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct TR_TAPVAL(pub(super) u32);
impl TR_TAPVAL {
    pub fn TR_C0VAL(&self) -> RegisterAddress<tr_tapval::TR_C0VAL> {
        RegisterAddress::new(self.0 + 0x4)
    }
    pub fn TR_CMVAL(&self) -> RegisterAddress<tr_tapval::TR_CMVAL> {
        RegisterAddress::new(self.0 + 0x0)
    }
    pub fn TR_STS2(&self) -> RegisterAddress<tr_tapval::TR_STS2> {
        RegisterAddress::new(self.0 + 0x0)
    }
}

/// Not documented
pub struct WT_TMR(pub(super) u32);
impl WT_TMR {
    pub fn APC_TMR(&self) -> RegisterAddress<wt_tmr::APC_TMR> {
        RegisterAddress::new(self.0 + 0x0)
    }
}
